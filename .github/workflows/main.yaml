# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Deploy via SST to AWS

on:
  workflow_dispatch:
  push:
    branches:
      - main
    # Optionally, we can have paths to specify which changes to watch for:
    paths:
      - ".github/workflows/main.yaml"
      - "src/**"
      - "*.json"
      - "*.yaml"
      - "*.config.js"
      - "*.config.ts"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      # Optionally we can cache the Next.js build from 3 folders: .next, .open-next and .sst
      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            .next/cache/
            .open-next/
            .sst/

          # This key is different for every branch/commit by hashing the files changes
          key: cache-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]xs') }}
          restore-keys: |
            cache-${{ hashFiles('**/package-lock.json') }}-

      - name: Install Project dependencies
        run: npm install

      - name: Install AWS Creds
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Set SST Config Secret
        run: |
          npx sst secrets set COMMIT_SHA '${{ github.sha }}' --stage production

      - name: Deploy to AWS with SST
        run: npm run deploy

      - name: Clean Up AWS Profile
        run: |
          rm -rf ~/.aws
